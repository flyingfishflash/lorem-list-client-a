variables:
  - &cache_volume '/home/container-runner/.local/share/docker/volumes-managed/woodpecker-ci-cache:/woodpecker/cache'
  - &export_cache_volume_deploy 'export CACHE_DEPLOY=/woodpecker/cache/$CI_REPO/deploy'
  - &alpine 'harbor.flyingfishflash.net/docker.io/alpine:latest'

when:
  event:
    - manual
    - push
  branch:
    exclude: main

depends_on:
  - prepare-deployment

clone:
  git:
    image: woodpeckerci/plugin-git
    settings:
      partial: false
      tags: true

steps:
  - name: restore playbook files from cache
    image: *alpine
    commands:
      - *export_cache_volume_deploy
      - cp -v $CACHE_DEPLOY/variables.yaml ci/scripts/deploy/
      - cp -v $CACHE_DEPLOY/inventory ci/scripts/deploy/
      - ls -l ci/scripts/deploy/
    volumes:
      - *cache_volume

  - name: execute deployment [dev]
    image: woodpeckerci/plugin-ansible
    depends_on:
      - restore playbook files from cache
    settings:
      extra_vars: 'region=dev'
      galaxy: ci/scripts/deploy/requirements.yaml
      inventory: ci/scripts/deploy/inventory
      playbook: ci/scripts/deploy/deploy.yaml
      private_key:
        from_secret: deployer_ssh_key_private
      ssh-extra-args: '-o StrictHostKeyChecking=no'
      user:
        from_secret: deployer_ssh_username
    when:
      branch:
        exclude: release

  - name: execute deployment [prd]
    image: woodpeckerci/plugin-ansible
    depends_on:
      - restore playbook files from cache
    settings:
      extra_vars: 'region=prd'
      galaxy: ci/scripts/deploy/requirements.yaml
      inventory: ci/scripts/deploy/inventory
      playbook: ci/scripts/deploy/deploy.yaml
      private_key:
        from_secret: deployer_ssh_key_private
      ssh-extra-args: '-o StrictHostKeyChecking=no'
      user:
        from_secret: deployer_ssh_username
    when:
      branch:
        include: release
