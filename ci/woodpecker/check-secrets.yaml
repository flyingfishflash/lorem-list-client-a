when:
  event:
    - manual
    - push
  branch:
    - build-*
    - ci-*
    - dependencies
    - dependency-*
    - dependency
    - feature-*
    - fix-*
    - main
    - perf-*
    - refactor-*
    - release
    - style-*
    - test-*

skip_clone: true

steps:
  - name: check secrets
    image: harbor.flyingfishflash.net/docker.io/alpine
    environment:
      EXITCODE: 0
      REGISTRY_REPOSITORY:
        from_secret: registry_repository
      REGISTRY_HOSTNAME:
        from_secret: registry_hostname
      REGISTRY_USERNAME:
        from_secret: registry_username
      REGISTRY_PASSWORD:
        from_secret: registry_password
      DEPLOY_TO_HOST:
        from_secret: deploy_to_host
      DEPLOYER_SSH_KEY_PRIVATE:
        from_secret: deployer_ssh_key_private
      DEPLOYER_SSH_USERNAME:
        from_secret: deployer_ssh_username
      OIDC_NAME:
        from_secret: OIDC_NAME
      OIDC_ENDPOINT:
        from_secret: OIDC_ENDPOINT
      OIDC_CLIENT_ID:
        from_secret: OIDC_CLIENT_ID
      OIDC_SCOPE:
        from_secret: OIDC_SCOPE
      OIDC_ROLE_CLAIM:
        from_secret: OIDC_ROLE_CLAIM
      OIDC_USERNAME_CLAIM:
        from_secret: OIDC_USERNAME_CLAIM
    commands:
      - 'if [ -z "$REGISTRY_REPOSITORY" ]; then echo "registry_repository is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$REGISTRY_HOSTNAME" ]; then echo "registry_hostname is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$REGISTRY_USERNAME" ]; then echo "deploy_to_host is not registry_username"; export EXITCODE=1; fi'
      - 'if [ -z "$REGISTRY_PASSWORD" ]; then echo "registry_password is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$DEPLOY_TO_HOST" ]; then echo "deploy_to_host is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$REGISTRY_HOSTNAME" ]; then echo "ERROR: registry_hostname is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$DEPLOYER_SSH_KEY_PRIVATE" ]; then echo "ERROR: deployer_ssh_key_private is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$DEPLOYER_SSH_USERNAME" ]; then echo "ERROR: deployer_ssh_username is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$OIDC_NAME" ]; then echo "ERROR: OIDC_NAME is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$OIDC_ENDPOINT" ]; then echo "ERROR: OIDC_ENDPOINT is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$OIDC_CLIENT_ID" ]; then echo "ERROR: OIDC_CLIENT_ID is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$OIDC_SCOPE" ]; then echo "ERROR: OIDC_SCOPE is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$OIDC_ROLE_CLAIM" ]; then echo "ERROR: OIDC_ROLE_CLAIM is empty"; export EXITCODE=1; fi'
      - 'if [ -z "$OIDC_USERNAME_CLAIM" ]; then echo "ERROR: OIDC_USERNAME_CLAIM is empty"; export EXITCODE=1; fi'
      - exit $EXITCODE
